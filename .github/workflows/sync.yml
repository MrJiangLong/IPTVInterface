# .github/workflows/sync.yml

name: 🚀 Sync Fork with Upstream

permissions:
  contents: write

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

env:
  UPSTREAM_REPO: "Guovin/iptv-api"
  UPSTREAM_BRANCH: "gd"
  FORK_BRANCH: "gd"
  WORKFLOW_FILENAME: "sync.yml"

jobs:
  sync:
    name: Sync with Upstream
    runs-on: ubuntu-latest
    if: github.repository_owner != 'Guovin'

    steps:
      - name: Checkout Fork
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.MY_GITHUB_TOKEN }} # 确保你的 secret 名称匹配
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Sync and Restore Workflow
        id: sync
        run: |
          set -e
          WORKFLOW_FILE=".github/workflows/${{ env.WORKFLOW_FILENAME }}"
          if [ -f "$WORKFLOW_FILE" ]; then
            echo "✅ Backing up workflow file: $WORKFLOW_FILE"
            mkdir -p /tmp/workflow_backup/.github/workflows/
            cp "$WORKFLOW_FILE" /tmp/workflow_backup/$WORKFLOW_FILE
          else
            echo "⚠️ Warning: Workflow file not found at $WORKFLOW_FILE. Nothing to back up."
          fi
          git remote add upstream https://github.com/${{ env.UPSTREAM_REPO }}.git
          git fetch upstream
          echo "Hard resetting to upstream/${{ env.UPSTREAM_BRANCH }}..."
          git reset --hard upstream/${{ env.UPSTREAM_BRANCH }}
          if [ -f "/tmp/workflow_backup/$WORKFLOW_FILE" ]; then
            echo "Restoring workflow file..."
            cp "/tmp/workflow_backup/$WORKFLOW_FILE" "$WORKFLOW_FILE"
            git add "$WORKFLOW_FILE"
          else
            echo "ℹ️ No backed up workflow file to restore."
          fi
          if [[ -z $(git status --porcelain) ]]; then
            echo "✅ Fork is already up to date. No push needed."
            echo "synced=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected. Committing restored workflow..."
            git commit -m "chore: [CI] Restore sync workflow after upstream sync"
            echo "synced=true" >> $GITHUB_OUTPUT
          fi
          
      - name: Force Push to Fork
        if: steps.sync.outputs.synced == 'true'
        run: |
          echo "Force pushing changes from local HEAD to origin/${{ env.FORK_BRANCH }}..."
          git push origin HEAD:${{ env.FORK_BRANCH }} --force
